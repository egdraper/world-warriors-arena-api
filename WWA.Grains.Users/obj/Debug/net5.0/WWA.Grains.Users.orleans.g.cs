// <auto-generated />
#if !EXCLUDE_GENERATED_CODE
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 618
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998
using global::Orleans;

[assembly: global::Orleans.Metadata.FeaturePopulatorAttribute(typeof(OrleansGeneratedCode.OrleansCodeGenWWA_Grains_UsersFeaturePopulator))]
[assembly: global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("WWA.Grains.Users, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
namespace WWA.Grains.Users
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::WWA.Grains.Users.IUserGrain), unchecked((int)0xF024375A)), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenUserGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case unchecked((int)0xF024375A):
                {
                    var casted = ((global::WWA.Grains.Users.IUserGrain)grain);
                    switch (methodId)
                    {
                        case (int)0x34E18DD0:
                            return await casted.GetUserAsync();
                        case unchecked((int)0xD27D5D5C):
                            return await casted.CreateUserAsync((global::WWA.Grains.Users.Entities.UserState)arguments[0]);
                        case (int)0x4BF53876:
                            return await casted.ReplaceUserAsync((global::WWA.Grains.Users.Entities.UserState)arguments[0]);
                        case unchecked((int)0x86690457):
                            await casted.DeleteUserAsync();
                            return null;
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => unchecked((int)0xF024375A);
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::WWA.Grains.Users.IUserGrain))]
    internal class OrleansCodeGenUserGrainReference : global::Orleans.Runtime.GrainReference, global::WWA.Grains.Users.IUserGrain
    {
        OrleansCodeGenUserGrainReference(global::Orleans.Runtime.GrainReference other): base(other)
        {
        }

        OrleansCodeGenUserGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions): base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenUserGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context): base(info, context)
        {
        }

        public override int InterfaceId => unchecked((int)0xF024375A);
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "IUserGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == unchecked((int)0xF024375A);
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case unchecked((int)0xF024375A):
                {
                    switch (methodId)
                    {
                        case (int)0x34E18DD0:
                            return "GetUserAsync";
                        case unchecked((int)0xD27D5D5C):
                            return "CreateUserAsync";
                        case (int)0x4BF53876:
                            return "ReplaceUserAsync";
                        case unchecked((int)0x86690457):
                            return "DeleteUserAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::WWA.Grains.Users.Entities.UserState> global::WWA.Grains.Users.IUserGrain.GetUserAsync()
        {
            return base.InvokeMethodAsync<global::WWA.Grains.Users.Entities.UserState>((int)0x34E18DD0, null);
        }

        global::System.Threading.Tasks.Task<global::WWA.Grains.Users.Entities.UserState> global::WWA.Grains.Users.IUserGrain.CreateUserAsync(global::WWA.Grains.Users.Entities.UserState userState0)
        {
            return base.InvokeMethodAsync<global::WWA.Grains.Users.Entities.UserState>(unchecked((int)0xD27D5D5C), new object[]{userState0});
        }

        global::System.Threading.Tasks.Task<global::WWA.Grains.Users.Entities.UserState> global::WWA.Grains.Users.IUserGrain.ReplaceUserAsync(global::WWA.Grains.Users.Entities.UserState userState0)
        {
            return base.InvokeMethodAsync<global::WWA.Grains.Users.Entities.UserState>((int)0x4BF53876, new object[]{userState0});
        }

        global::System.Threading.Tasks.Task global::WWA.Grains.Users.IUserGrain.DeleteUserAsync()
        {
            return base.InvokeMethodAsync<object>(unchecked((int)0x86690457), null);
        }
    }
}

namespace WWA.Grains.Users.Entities
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::WWA.Grains.Users.Entities.UserState))]
    internal sealed class OrleansCodeGenWWA_Grains_Users_Entities_UserStateSerializer
    {
        public OrleansCodeGenWWA_Grains_Users_Entities_UserStateSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::WWA.Grains.Users.Entities.UserState input = ((global::WWA.Grains.Users.Entities.UserState)original);
            global::WWA.Grains.Users.Entities.UserState result = new global::WWA.Grains.Users.Entities.UserState();
            context.RecordCopy(original, result);
            result.DateActive = input.DateActive;
            result.DateCreated = input.DateCreated;
            result.DateModified = input.DateModified;
            result.DisplayName = input.DisplayName;
            result.Email = input.Email;
            result.Id = input.Id;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::WWA.Grains.Users.Entities.UserState input = (global::WWA.Grains.Users.Entities.UserState)untypedInput;
            context.SerializeInner(input.DateActive, typeof(global::System.DateTime));
            context.SerializeInner(input.DateCreated, typeof(global::System.DateTime? ));
            context.SerializeInner(input.DateModified, typeof(global::System.DateTime? ));
            context.SerializeInner(input.DisplayName, typeof(string));
            context.SerializeInner(input.Email, typeof(string));
            context.SerializeInner(input.Id, typeof(string));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::WWA.Grains.Users.Entities.UserState result = new global::WWA.Grains.Users.Entities.UserState();
            context.RecordObject(result);
            result.DateActive = (global::System.DateTime)context.DeserializeInner(typeof(global::System.DateTime));
            result.DateCreated = (global::System.DateTime? )context.DeserializeInner(typeof(global::System.DateTime? ));
            result.DateModified = (global::System.DateTime? )context.DeserializeInner(typeof(global::System.DateTime? ));
            result.DisplayName = (string)context.DeserializeInner(typeof(string));
            result.Email = (string)context.DeserializeInner(typeof(string));
            result.Id = (string)context.DeserializeInner(typeof(string));
            return (global::WWA.Grains.Users.Entities.UserState)result;
        }
    }
}

namespace OrleansGeneratedCode
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0")]
    internal sealed class OrleansCodeGenWWA_Grains_UsersFeaturePopulator : global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainInterfaceFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainClassFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Serialization.SerializerFeature>
    {
        public void Populate(global::Orleans.Metadata.GrainInterfaceFeature feature)
        {
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::WWA.Grains.Users.IUserGrain), typeof(WWA.Grains.Users.OrleansCodeGenUserGrainReference), typeof(WWA.Grains.Users.OrleansCodeGenUserGrainMethodInvoker), unchecked((int)0xF024375A)));
        }

        public void Populate(global::Orleans.Metadata.GrainClassFeature feature)
        {
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::WWA.Grains.Users.UserGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::WWA.Grains.Users.UserRepository)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::WWA.Grains.Users.UserService)));
        }

        public void Populate(global::Orleans.Serialization.SerializerFeature feature)
        {
            feature.AddSerializerType(typeof(global::WWA.Grains.Users.Entities.UserState), typeof(WWA.Grains.Users.Entities.OrleansCodeGenWWA_Grains_Users_Entities_UserStateSerializer), false);
            feature.AddKnownType("WWA.Grains.Users.UserGrain,WWA.Grains.Users", "WWA.Grains.Users.UserGrain");
            feature.AddKnownType("WWA.Grains.Users.UserRepository,WWA.Grains.Users", "WWA.Grains.Users.UserRepository");
            feature.AddKnownType("WWA.Grains.Users.UserService,WWA.Grains.Users", "WWA.Grains.Users.UserService");
            feature.AddKnownType("WWA.Grains.Users.AutoMapperProfile,WWA.Grains.Users", "WWA.Grains.Users.AutoMapperProfile");
            feature.AddKnownType("WWA.Grains.Users.Entities.User,WWA.Grains.Users", "WWA.Grains.Users.Entities.User");
            feature.AddKnownType("WWA.Grains.Users.Entities.UserState,WWA.Grains.Users", "WWA.Grains.Users.Entities.UserState");
            feature.AddKnownType("WWA.Grains.Users.IUserGrain,WWA.Grains.Users", "WWA.Grains.Users.IUserGrain");
            feature.AddKnownType("System.Threading.Tasks.Task`1", "Task`1'1");
            feature.AddKnownType("WWA.Grains.Entities.TrackedEntity,WWA.Grains", "WWA.Grains.Entities.TrackedEntity");
            feature.AddKnownType("WWA.Grains.Entities.Entity,WWA.Grains", "WWA.Grains.Entities.Entity");
            feature.AddKnownType("System.Threading.Tasks.Task", "Task");
            feature.AddKnownType("WWA.Grains.Users.IUserRepository,WWA.Grains.Users", "WWA.Grains.Users.IUserRepository");
            feature.AddKnownType("System.Nullable`1", "Nullable`1'1");
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
