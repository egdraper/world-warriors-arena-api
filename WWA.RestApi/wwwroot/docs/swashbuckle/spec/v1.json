{
  "openapi": "3.0.1",
  "info": {
    "title": "World Warriors Arena REST API",
    "description": "<cool description goes here>",
    "version": "v1",
    "x-logo": { }
  },
  "paths": {
    "/users": {
      "head": {
        "tags": [
          "Users"
        ],
        "summary": "Queries a User",
        "operationId": "QueryUsers",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "There were validation errors."
          },
          "403": {
            "description": "Not authorized to make this request."
          },
          "500": {
            "description": "There was an internal server error."
          },
          "401": {
            "description": "Unable to authenticate provided credentials."
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets a list of Users",
        "operationId": "GetUsers",
        "parameters": [
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirectionType"
            }
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a list of paged Users.",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of filtered resources.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSummaryViewModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There were validation errors."
          },
          "403": {
            "description": "Not authorized to make this request."
          },
          "500": {
            "description": "There was an internal server error."
          },
          "401": {
            "description": "Unable to authenticate provided credentials."
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Creates a User",
        "operationId": "CreateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved a list of  Users.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReadViewModel"
                }
              }
            }
          },
          "400": {
            "description": "There were validation errors."
          },
          "403": {
            "description": "Not authorized to make this request."
          },
          "500": {
            "description": "There was an internal server error."
          },
          "401": {
            "description": "Unable to authenticate provided credentials."
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets a User",
        "operationId": "GetUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a User.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReadViewModel"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to make this request."
          },
          "404": {
            "description": "The target route does not exist or contains an ID that cannot be found."
          },
          "500": {
            "description": "There was an internal server error."
          },
          "401": {
            "description": "Unable to authenticate provided credentials."
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Replaces a User",
        "operationId": "ReplaceUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserReplaceViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved a User.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReadViewModel"
                }
              }
            }
          },
          "400": {
            "description": "There were validation errors."
          },
          "403": {
            "description": "Not authorized to make this request."
          },
          "404": {
            "description": "The target route does not exist or contains an ID that cannot be found."
          },
          "500": {
            "description": "There was an internal server error."
          },
          "401": {
            "description": "Unable to authenticate provided credentials."
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Deletes a User",
        "operationId": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Not authorized to make this request."
          },
          "404": {
            "description": "The target route does not exist or contains an ID that cannot be found."
          },
          "500": {
            "description": "There was an internal server error."
          },
          "401": {
            "description": "Unable to authenticate provided credentials."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SortDirectionType": {
        "enum": [
          "Ascending",
          "Descending"
        ],
        "type": "string"
      },
      "UserSummaryViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserCreateViewModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserReadViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time"
          },
          "dateActive": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserReplaceViewModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Admin API for managing Users. Will be moved or hidden at a future date."
    }
  ]
}