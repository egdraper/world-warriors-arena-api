// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WWA.RestApi.CsharpClient
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for WwaRestApiClient.
    /// </summary>
    public static partial class WwaRestApiClientExtensions
    {
            /// <summary>
            /// Queries a User
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='email'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task QueryUsersAsync(this IWwaRestApiClient operations, string email = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.QueryUsersWithHttpMessagesAsync(email, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets a list of Users
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='skip'>
            /// </param>
            /// <param name='take'>
            /// </param>
            /// <param name='sortField'>
            /// </param>
            /// <param name='sortDirection'>
            /// Possible values include: 'Ascending', 'Descending'
            /// </param>
            /// <param name='search'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<UserSummaryViewModel>> GetUsersAsync(this IWwaRestApiClient operations, int? skip = default(int?), int? take = default(int?), string sortField = default(string), string sortDirection = default(string), string search = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetUsersWithHttpMessagesAsync(skip, take, sortField, sortDirection, search, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates a User
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<UserReadViewModel> CreateUserAsync(this IWwaRestApiClient operations, UserCreateViewModel body = default(UserCreateViewModel), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateUserWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a User
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<UserReadViewModel> GetUserAsync(this IWwaRestApiClient operations, string id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetUserWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Replaces a User
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<UserReadViewModel> ReplaceUserAsync(this IWwaRestApiClient operations, string id, UserReplaceViewModel body = default(UserReplaceViewModel), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ReplaceUserWithHttpMessagesAsync(id, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a User
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IWwaRestApiClient operations, string id, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
